/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package seungkyu.msa.service.kafka.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RestaurantApprovalRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7360410250025182427L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RestaurantApprovalRequestAvroModel\",\"namespace\":\"seungkyu.msa.service.kafka.model\",\"fields\":[{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"restaurantId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"restaurantOrderStatus\",\"type\":{\"type\":\"enum\",\"name\":\"RestaurantOrderStatus\",\"symbols\":[\"PAID\"]}},{\"name\":\"price\",\"type\":\"long\"},{\"name\":\"createdAt\",\"type\":\"long\"},{\"name\":\"products\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Product\",\"fields\":[{\"name\":\"productId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"quantity\",\"type\":\"int\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<RestaurantApprovalRequestAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RestaurantApprovalRequestAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RestaurantApprovalRequestAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RestaurantApprovalRequestAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RestaurantApprovalRequestAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RestaurantApprovalRequestAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RestaurantApprovalRequestAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RestaurantApprovalRequestAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RestaurantApprovalRequestAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String orderId;
  private java.lang.String restaurantId;
  private seungkyu.msa.service.kafka.model.RestaurantOrderStatus restaurantOrderStatus;
  private long price;
  private long createdAt;
  private java.util.List<seungkyu.msa.service.kafka.model.Product> products;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RestaurantApprovalRequestAvroModel() {}

  /**
   * All-args constructor.
   * @param orderId The new value for orderId
   * @param restaurantId The new value for restaurantId
   * @param restaurantOrderStatus The new value for restaurantOrderStatus
   * @param price The new value for price
   * @param createdAt The new value for createdAt
   * @param products The new value for products
   */
  public RestaurantApprovalRequestAvroModel(java.lang.String orderId, java.lang.String restaurantId, seungkyu.msa.service.kafka.model.RestaurantOrderStatus restaurantOrderStatus, java.lang.Long price, java.lang.Long createdAt, java.util.List<seungkyu.msa.service.kafka.model.Product> products) {
    this.orderId = orderId;
    this.restaurantId = restaurantId;
    this.restaurantOrderStatus = restaurantOrderStatus;
    this.price = price;
    this.createdAt = createdAt;
    this.products = products;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return orderId;
    case 1: return restaurantId;
    case 2: return restaurantOrderStatus;
    case 3: return price;
    case 4: return createdAt;
    case 5: return products;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: orderId = value$ != null ? value$.toString() : null; break;
    case 1: restaurantId = value$ != null ? value$.toString() : null; break;
    case 2: restaurantOrderStatus = (seungkyu.msa.service.kafka.model.RestaurantOrderStatus)value$; break;
    case 3: price = (java.lang.Long)value$; break;
    case 4: createdAt = (java.lang.Long)value$; break;
    case 5: products = (java.util.List<seungkyu.msa.service.kafka.model.Product>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return The value of the 'orderId' field.
   */
  public java.lang.String getOrderId() {
    return orderId;
  }


  /**
   * Sets the value of the 'orderId' field.
   * @param value the value to set.
   */
  public void setOrderId(java.lang.String value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'restaurantId' field.
   * @return The value of the 'restaurantId' field.
   */
  public java.lang.String getRestaurantId() {
    return restaurantId;
  }


  /**
   * Sets the value of the 'restaurantId' field.
   * @param value the value to set.
   */
  public void setRestaurantId(java.lang.String value) {
    this.restaurantId = value;
  }

  /**
   * Gets the value of the 'restaurantOrderStatus' field.
   * @return The value of the 'restaurantOrderStatus' field.
   */
  public seungkyu.msa.service.kafka.model.RestaurantOrderStatus getRestaurantOrderStatus() {
    return restaurantOrderStatus;
  }


  /**
   * Sets the value of the 'restaurantOrderStatus' field.
   * @param value the value to set.
   */
  public void setRestaurantOrderStatus(seungkyu.msa.service.kafka.model.RestaurantOrderStatus value) {
    this.restaurantOrderStatus = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public long getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(long value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public long getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(long value) {
    this.createdAt = value;
  }

  /**
   * Gets the value of the 'products' field.
   * @return The value of the 'products' field.
   */
  public java.util.List<seungkyu.msa.service.kafka.model.Product> getProducts() {
    return products;
  }


  /**
   * Sets the value of the 'products' field.
   * @param value the value to set.
   */
  public void setProducts(java.util.List<seungkyu.msa.service.kafka.model.Product> value) {
    this.products = value;
  }

  /**
   * Creates a new RestaurantApprovalRequestAvroModel RecordBuilder.
   * @return A new RestaurantApprovalRequestAvroModel RecordBuilder
   */
  public static seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder newBuilder() {
    return new seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder();
  }

  /**
   * Creates a new RestaurantApprovalRequestAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RestaurantApprovalRequestAvroModel RecordBuilder
   */
  public static seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder newBuilder(seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder other) {
    if (other == null) {
      return new seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder();
    } else {
      return new seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new RestaurantApprovalRequestAvroModel RecordBuilder by copying an existing RestaurantApprovalRequestAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new RestaurantApprovalRequestAvroModel RecordBuilder
   */
  public static seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder newBuilder(seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel other) {
    if (other == null) {
      return new seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder();
    } else {
      return new seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for RestaurantApprovalRequestAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RestaurantApprovalRequestAvroModel>
    implements org.apache.avro.data.RecordBuilder<RestaurantApprovalRequestAvroModel> {

    private java.lang.String orderId;
    private java.lang.String restaurantId;
    private seungkyu.msa.service.kafka.model.RestaurantOrderStatus restaurantOrderStatus;
    private long price;
    private long createdAt;
    private java.util.List<seungkyu.msa.service.kafka.model.Product> products;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.restaurantId)) {
        this.restaurantId = data().deepCopy(fields()[1].schema(), other.restaurantId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.restaurantOrderStatus)) {
        this.restaurantOrderStatus = data().deepCopy(fields()[2].schema(), other.restaurantOrderStatus);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.price)) {
        this.price = data().deepCopy(fields()[3].schema(), other.price);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[4].schema(), other.createdAt);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.products)) {
        this.products = data().deepCopy(fields()[5].schema(), other.products);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing RestaurantApprovalRequestAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.restaurantId)) {
        this.restaurantId = data().deepCopy(fields()[1].schema(), other.restaurantId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.restaurantOrderStatus)) {
        this.restaurantOrderStatus = data().deepCopy(fields()[2].schema(), other.restaurantOrderStatus);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.price)) {
        this.price = data().deepCopy(fields()[3].schema(), other.price);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[4].schema(), other.createdAt);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.products)) {
        this.products = data().deepCopy(fields()[5].schema(), other.products);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'orderId' field.
      * @return The value.
      */
    public java.lang.String getOrderId() {
      return orderId;
    }


    /**
      * Sets the value of the 'orderId' field.
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder setOrderId(java.lang.String value) {
      validate(fields()[0], value);
      this.orderId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'orderId' field.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'restaurantId' field.
      * @return The value.
      */
    public java.lang.String getRestaurantId() {
      return restaurantId;
    }


    /**
      * Sets the value of the 'restaurantId' field.
      * @param value The value of 'restaurantId'.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder setRestaurantId(java.lang.String value) {
      validate(fields()[1], value);
      this.restaurantId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'restaurantId' field has been set.
      * @return True if the 'restaurantId' field has been set, false otherwise.
      */
    public boolean hasRestaurantId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'restaurantId' field.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder clearRestaurantId() {
      restaurantId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'restaurantOrderStatus' field.
      * @return The value.
      */
    public seungkyu.msa.service.kafka.model.RestaurantOrderStatus getRestaurantOrderStatus() {
      return restaurantOrderStatus;
    }


    /**
      * Sets the value of the 'restaurantOrderStatus' field.
      * @param value The value of 'restaurantOrderStatus'.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder setRestaurantOrderStatus(seungkyu.msa.service.kafka.model.RestaurantOrderStatus value) {
      validate(fields()[2], value);
      this.restaurantOrderStatus = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'restaurantOrderStatus' field has been set.
      * @return True if the 'restaurantOrderStatus' field has been set, false otherwise.
      */
    public boolean hasRestaurantOrderStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'restaurantOrderStatus' field.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder clearRestaurantOrderStatus() {
      restaurantOrderStatus = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public long getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder setPrice(long value) {
      validate(fields()[3], value);
      this.price = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder clearPrice() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public long getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder setCreatedAt(long value) {
      validate(fields()[4], value);
      this.createdAt = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder clearCreatedAt() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'products' field.
      * @return The value.
      */
    public java.util.List<seungkyu.msa.service.kafka.model.Product> getProducts() {
      return products;
    }


    /**
      * Sets the value of the 'products' field.
      * @param value The value of 'products'.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder setProducts(java.util.List<seungkyu.msa.service.kafka.model.Product> value) {
      validate(fields()[5], value);
      this.products = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'products' field has been set.
      * @return True if the 'products' field has been set, false otherwise.
      */
    public boolean hasProducts() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'products' field.
      * @return This builder.
      */
    public seungkyu.msa.service.kafka.model.RestaurantApprovalRequestAvroModel.Builder clearProducts() {
      products = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RestaurantApprovalRequestAvroModel build() {
      try {
        RestaurantApprovalRequestAvroModel record = new RestaurantApprovalRequestAvroModel();
        record.orderId = fieldSetFlags()[0] ? this.orderId : (java.lang.String) defaultValue(fields()[0]);
        record.restaurantId = fieldSetFlags()[1] ? this.restaurantId : (java.lang.String) defaultValue(fields()[1]);
        record.restaurantOrderStatus = fieldSetFlags()[2] ? this.restaurantOrderStatus : (seungkyu.msa.service.kafka.model.RestaurantOrderStatus) defaultValue(fields()[2]);
        record.price = fieldSetFlags()[3] ? this.price : (java.lang.Long) defaultValue(fields()[3]);
        record.createdAt = fieldSetFlags()[4] ? this.createdAt : (java.lang.Long) defaultValue(fields()[4]);
        record.products = fieldSetFlags()[5] ? this.products : (java.util.List<seungkyu.msa.service.kafka.model.Product>) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RestaurantApprovalRequestAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<RestaurantApprovalRequestAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RestaurantApprovalRequestAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<RestaurantApprovalRequestAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.orderId);

    out.writeString(this.restaurantId);

    out.writeEnum(this.restaurantOrderStatus.ordinal());

    out.writeLong(this.price);

    out.writeLong(this.createdAt);

    long size0 = this.products.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (seungkyu.msa.service.kafka.model.Product e0: this.products) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.orderId = in.readString();

      this.restaurantId = in.readString();

      this.restaurantOrderStatus = seungkyu.msa.service.kafka.model.RestaurantOrderStatus.values()[in.readEnum()];

      this.price = in.readLong();

      this.createdAt = in.readLong();

      long size0 = in.readArrayStart();
      java.util.List<seungkyu.msa.service.kafka.model.Product> a0 = this.products;
      if (a0 == null) {
        a0 = new SpecificData.Array<seungkyu.msa.service.kafka.model.Product>((int)size0, SCHEMA$.getField("products").schema());
        this.products = a0;
      } else a0.clear();
      SpecificData.Array<seungkyu.msa.service.kafka.model.Product> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<seungkyu.msa.service.kafka.model.Product>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          seungkyu.msa.service.kafka.model.Product e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new seungkyu.msa.service.kafka.model.Product();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.orderId = in.readString();
          break;

        case 1:
          this.restaurantId = in.readString();
          break;

        case 2:
          this.restaurantOrderStatus = seungkyu.msa.service.kafka.model.RestaurantOrderStatus.values()[in.readEnum()];
          break;

        case 3:
          this.price = in.readLong();
          break;

        case 4:
          this.createdAt = in.readLong();
          break;

        case 5:
          long size0 = in.readArrayStart();
          java.util.List<seungkyu.msa.service.kafka.model.Product> a0 = this.products;
          if (a0 == null) {
            a0 = new SpecificData.Array<seungkyu.msa.service.kafka.model.Product>((int)size0, SCHEMA$.getField("products").schema());
            this.products = a0;
          } else a0.clear();
          SpecificData.Array<seungkyu.msa.service.kafka.model.Product> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<seungkyu.msa.service.kafka.model.Product>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              seungkyu.msa.service.kafka.model.Product e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new seungkyu.msa.service.kafka.model.Product();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










